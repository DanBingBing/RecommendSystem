<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>RecommendSystem</display-name>
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- 1.启动Spring的容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- <param-value>classpath:main/resources/spring/applicationContext-*.xml</param-value> -->
		<param-value>classpath:spring/applicationContext-*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!--springMVC前端控制器加载-->
  	<servlet>
    	<servlet-name>springmvc</servlet-name>
    	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--contextConfigLocation配置SpringMVC加载的配置文件（配置处理器，映射器等等）
    如果不配置contextConfigLocation，默认加载的是：/WEB-INF/servlet名称-servlet.xml(springmvc-servlet.xml)
    -->
    	<init-param>
    		<param-name>contextConfigLocation</param-name>
    		<param-value>classpath:spring/springmvc.xml</param-value>
    	</init-param>
    	<load-on-startup>1</load-on-startup>
  	</servlet>

  	<servlet-mapping>
    	<servlet-name>springmvc</servlet-name>
    	<url-pattern>/</url-pattern>
  	</servlet-mapping>
	
	<!--spring为我们提供的乱码过滤器，一定要放在其他过滤器之前-->
  	<filter>
    	<filter-name>CharacterEncodingFilter</filter-name>
    	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    	<init-param>
      		<param-name>encoding</param-name>
      		<param-value>utf-8</param-value>
    	</init-param>
    	<init-param>
      		<param-name>forceRequestEcoding</param-name>
      		<param-value>true</param-value>
    	</init-param>
    	<init-param>
      		<param-name>forceResponseEcoding</param-name>
      		<param-value>true</param-value>
    	</init-param>
  	</filter>
  	<filter-mapping>
   		<filter-name>CharacterEncodingFilter</filter-name>
    	<url-pattern>/*</url-pattern>
  	</filter-mapping>
  	
  	<!-- 设置为指定的Rest风格的url请求,将普通的post请求转为指定的delete或者out请求 -->
  	<filter>
    	<filter-name>HiddenHttpMethodFilter</filter-name>
    	<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  	</filter>
  	<filter-mapping>
   		<filter-name>HiddenHttpMethodFilter</filter-name>
    	<url-pattern>/*</url-pattern>
  	</filter-mapping>
  	
  	<!-- 设置PUT或PATCH请求时的过滤器，用于将请求体中的数据封装为Map，方便request.getParameter()方法调用 -->
  	<filter>
    	<filter-name>HttpPutFormContentFilter</filter-name>
    	<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
  	</filter>
  	<filter-mapping>
   		<filter-name>HttpPutFormContentFilter</filter-name>
    	<url-pattern>/*</url-pattern>
  	</filter-mapping>
  
</web-app>