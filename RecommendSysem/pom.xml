<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.movie</groupId>
  <artifactId>RecommendSystem</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  
  <dependencies>
  	<dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-hdfs</artifactId>
      <version>2.7.1</version>
      <exclusions>
      	<exclusion>
      		<groupId>javax.servlet</groupId>
      		<artifactId>servlet-api</artifactId>
      	</exclusion>
      </exclusions>
    </dependency>
    
	<dependency>
    	<groupId>org.apache.hadoop</groupId>
    	<artifactId>hadoop-client</artifactId>
    	<version>2.7.1</version>
    	<exclusions>
    		<exclusion>
    			<groupId>javax.servlet</groupId>
    			<artifactId>servlet-api</artifactId>
    		</exclusion>
    		<exclusion>
    			<groupId>javax.servlet.jsp</groupId>
    			<artifactId>jsp-api</artifactId>
    		</exclusion>
    	</exclusions>
	</dependency>
  
  	<!--springMVC,spring-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>4.3.7.RELEASE</version>
    </dependency>
    
    <!-- spring-jdbc -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>4.3.7.RELEASE</version>
    </dependency>
    
    <!-- springAOP -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>4.3.7.RELEASE</version>
    </dependency>
    
     <!-- spring-test -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>4.3.7.RELEASE</version>
    </dependency>
    
    <!-- myBatis -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>3.4.2</version>
    </dependency>
    
    <!-- myBatis-spring -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>1.3.1</version>
    </dependency>
    
    <!-- myBatis-generator -->
    <dependency>
      <groupId>org.mybatis.generator</groupId>
      <artifactId>mybatis-generator-core</artifactId>
      <version>1.3.5</version>
    </dependency>
    
    <!-- 数据库连接池、驱动 -->
    <dependency>
      <groupId>c3p0</groupId>
      <artifactId>c3p0</artifactId>
      <version>0.9.1</version>
    </dependency>
    <dependency>
    	<groupId>mysql</groupId>
    	<artifactId>mysql-connector-java</artifactId>
    	<version>5.1.41</version>
    </dependency>
    
    <!-- jstl -->
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>
    
    <!-- servlet-api -->
    <!-- <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency> -->
    <!-- spring4测试的时候，需要servlet3.0的支持 -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>
    
    <!-- JSR303数据校验支持:tomcat7及以上的服务器。
    	tomcat7以下的服务器：el表达式，额外给服务器的lib包中替换新标准的el
     -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>5.4.1.Final</version>
    </dependency>
    
    <!-- 引入PageHelper分页插件 -->
    <!-- 该版本中使用getList()的方法时获取不到从数据库中获取的封装到list集合中的信息 -->
    <!-- <dependency>
      <groupId>com.github.pagehelper</groupId>
      <artifactId>pagehelper</artifactId>
      <version>5.0.0</version>
    </dependency> -->
    <dependency>
      <groupId>com.github.pagehelper</groupId>
      <artifactId>pagehelper</artifactId>
      <version>5.1.3</version>
    </dependency>
    
    <!-- Jackson Json处理工具包 -->
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-databind</artifactId>
		<version>2.8.8</version>
	</dependency>
	
	<!-- 定时启动某个方法，还需配置xml -->
	<dependency>
    	<groupId>aopalliance</groupId>
    	<artifactId>aopalliance</artifactId>
    	<version>1.0</version>
	</dependency>
	
    
    <!-- 格式化对象，方便输出日志 -->  
     <dependency>  
         <groupId>com.alibaba</groupId>  
         <artifactId>fastjson</artifactId>  
         <version>1.1.41</version>  
    </dependency>
    
    <!-- log4j -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>
    
    <!-- maven install 打包项目为war时使用 -->
	<dependency>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-resources-plugin</artifactId>
	    <version>2.4.3</version>
	    <exclusions>
	    	<exclusion>
	    		<groupId>com.jcraft</groupId>
	    		<artifactId>jsch</artifactId>
	    	</exclusion>
	    	<exclusion>
	    		<groupId>jtidy</groupId>
	    		<artifactId>jtidy</artifactId>
	    	</exclusion>
	    	<exclusion>
	    		<groupId>org.apache.maven.wagon</groupId>
	    		<artifactId>wagon-file</artifactId>
	    	</exclusion>
	    	<exclusion>
	    		<groupId>org.apache.maven.wagon</groupId>
	    		<artifactId>wagon-http-lightweight</artifactId>
	    	</exclusion>
	    	<exclusion>
	    		<groupId>org.apache.maven.wagon</groupId>
	    		<artifactId>wagon-http-shared</artifactId>
	    	</exclusion>
	    	<exclusion>
	    		<groupId>org.apache.maven.wagon</groupId>
	    		<artifactId>wagon-ssh</artifactId>
	    	</exclusion>
	    	<exclusion>
	    		<groupId>org.apache.maven.wagon</groupId>
	    		<artifactId>wagon-ssh-common</artifactId>
	    	</exclusion>
	    	<exclusion>
	    		<groupId>org.apache.maven.wagon</groupId>
	    		<artifactId>wagon-ssh-external</artifactId>
	    	</exclusion>
	    </exclusions>
	</dependency>
	
	<!-- junit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
    </dependency>
    
  </dependencies>
   
  <build>
	  <plugins>
	  	  <!-- Setting the -source and -target of the Java Compiler -->
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-compiler-plugin</artifactId>
	        <version>3.8.1</version>
	        <configuration>
	          <!-- <encoding>UTF-8</encoding> -->
	          <source>1.8</source>
	          <target>1.8</target>
	        </configuration>
	      </plugin>
	      
	      <!-- 配置Tomcat插件 -->
		  <plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<port>8800</port>
					<!-- 默认访问路径有项目名，加上 / 表示没有 -->
					<!-- <path>/</path> -->
				</configuration>
			</plugin>
	      
	      <!-- 配置打包时跳过测试 ，首次配置使用的时候会自动联网进行下载 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.4</version>
			</plugin>
	    </plugins>
	    
  </build>
  <!-- Using platform encoding,也可使用上面的方式 -->
  <properties>  
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>  
  </properties>
</project>